{
    "AI Handoff Task": {
        "prefix": "ai-handoff",
        "body": [
            "# ü§ñ AI TASK HANDOFF",
            "",
            "## üéØ PRIMARY MISSION",
            "**Objective**: ${1:description}",
            "**Priority**: ${2|HIGH,MEDIUM,LOW|}",
            "**Environment**: ${3:target-system}",
            "**Estimated Time**: ${4:30 minutes}",
            "",
            "## üìã TASK QUEUE",
            "### Immediate Tasks (This Handoff)",
            "- [ ] ${5:Task 1: Specific action with exact commands}",
            "- [ ] ${6:Task 2: Next action with validation steps}", 
            "- [ ] ${7:Task 3: Final action with success criteria}",
            "",
            "### Follow-up Tasks (Next Handoff)",
            "- [ ] Create: ${8:What to prepare for return handoff}",
            "- [ ] Test: ${9:What to validate after completion}",
            "- [ ] Document: ${10:What to capture for next AI}",
            "",
            "## üîß EXECUTION CONTEXT",
            "```json",
            "{",
            "  \"environment\": \"${11:windows-server-2019}\",",
            "  \"access\": \"${12:rdp://ip-address}\",",
            "  \"workingDir\": \"${13:C:\\\\temp\\\\project}\",",
            "  \"requiredTools\": [\"${14:powershell}\", \"${15:git}\"],",
            "  \"credentials\": \"${16:secure-store-reference}\"",
            "}",
            "```",
            "",
            "## üìÅ FILES TO CREATE/MODIFY",
            "| File | Action | Purpose | Validation |",
            "|------|--------|---------|------------|",
            "| `${17:config.conf}` | ${18|CREATE,MODIFY,DELETE|} | ${19:Server config} | ${20:Test connectivity} |",
            "",
            "## üß™ VALIDATION COMMANDS",
            "```${21|powershell,bash|}",
            "${22:# Test 1: Service Status}",
            "${23:Get-Service -Name \"ServiceName\" | Select-Object Status}",
            "```",
            "",
            "## ‚úÖ SUCCESS CRITERIA",
            "- [ ] ${24:All services running (Status: Running)}",
            "- [ ] ${25:Network connectivity confirmed}",
            "- [ ] ${26:No errors in event logs}",
            "",
            "## üîÑ NEXT HANDOFF PREPARATION",
            "When complete, prepare these for return handoff:",
            "- ${27:Updated system configuration files}",
            "- ${28:Performance metrics and logs}",
            "- ${29:List of any issues encountered}",
            "",
            "## üö® EMERGENCY PROCEDURES",
            "If critical failure:",
            "1. Document exact error in `EMERGENCY_LOG.md`",
            "2. Revert changes using: `git checkout HEAD~1 -- [files]`",
            "3. Create emergency handoff branch: `emergency-${30:issue}-$(date +%Y%m%d-%H%M%S)`"
        ],
        "description": "Create comprehensive AI handoff task template"
    },
    "AI Execution Log": {
        "prefix": "ai-exec",
        "body": [
            "# üîÑ EXECUTION LOG",
            "**Start Time**: ${1:$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")}",
            "**Environment**: ${2:System details}",
            "**AI**: ${3:Claude 3.5 Sonnet}",
            "",
            "## ‚úÖ Task Progress",
            "### ${4|‚úÖ,üîÑ,‚ùå|} Task 1: ${5:Task name}",
            "**Status**: ${6|COMPLETED,IN PROGRESS,FAILED|}",
            "**Time**: ${7:start} - ${8:end} (${9:duration})",
            "**Commands**:",
            "```${10|powershell,bash|}",
            "${11:command executed}",
            "```",
            "**Output**: ${12:command output}",
            "**Validation**: ${13|‚úÖ,‚ùå|} ${14:validation result}",
            "",
            "## üìä PERFORMANCE METRICS",
            "- ${15:Metric 1}: ${16:value}",
            "- ${17:Metric 2}: ${18:value}",
            "",
            "## üîß OPTIMIZATIONS IMPLEMENTED",
            "- ${19:Optimization 1}",
            "- ${20:Optimization 2}",
            "",
            "## üéØ RETURN HANDOFF TASKS",
            "- [ ] ${21:Task for local AI}",
            "- [ ] ${22:Follow-up action needed}"
        ],
        "description": "Create AI execution log template"
    },
    "Emergency Log": {
        "prefix": "emergency",
        "body": [
            "# üö® EMERGENCY LOG",
            "**Timestamp**: ${1:$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")}",
            "**Severity**: ${2|CRITICAL,HIGH,MEDIUM|}",
            "**Environment**: ${3:affected system}",
            "",
            "## üí• ISSUE DESCRIPTION",
            "${4:Detailed description of what went wrong}",
            "",
            "## üîç ERROR DETAILS",
            "```",
            "${5:exact error message or log output}",
            "```",
            "",
            "## üõ†Ô∏è ATTEMPTED SOLUTIONS",
            "1. ${6:First attempted solution}",
            "   - Result: ${7|FAILED,PARTIAL,SUCCESS|}",
            "2. ${8:Second attempted solution}",
            "   - Result: ${9|FAILED,PARTIAL,SUCCESS|}",
            "",
            "## üîÑ CURRENT STATE",
            "- System Status: ${10|DOWN,DEGRADED,RECOVERING|}",
            "- Data Integrity: ${11|INTACT,COMPROMISED,UNKNOWN|}",
            "- Service Availability: ${12|OFFLINE,LIMITED,RESTORED|}",
            "",
            "## üö® IMMEDIATE ACTIONS REQUIRED",
            "- [ ] ${13:Critical action 1}",
            "- [ ] ${14:Critical action 2}",
            "",
            "## üìû ESCALATION",
            "- [ ] Notify: ${15:stakeholder}",
            "- [ ] Create: ${16:follow-up task}",
            "- [ ] Document: ${17:lessons learned}"
        ],
        "description": "Create emergency incident log"
    }
}
